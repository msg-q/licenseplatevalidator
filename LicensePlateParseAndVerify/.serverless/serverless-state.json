{
  "service": {
    "service": "lprparseandverify",
    "serviceObject": {
      "name": "lprparseandverify"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6/*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LprProcessingQueue",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:Query"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LprDataTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::GetAtt": [
                          "LprDataTable",
                          "Arn"
                        ]
                      },
                      "index",
                      "DaysSinceEpochIndex"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:Query"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ValetDataTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::GetAtt": [
                          "ValetDataTable",
                          "Arn"
                        ]
                      },
                      "index",
                      "DaysSinceEpochIndex"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "sqs:SendMessage"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LprParseAndStoreCompletedQueue",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "LprImageBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      },
      "environment": {
        "LPR_DYNAMODB_TABLE": {
          "Ref": "LprDataTable"
        },
        "VALET_DYNAMODB_TABLE": {
          "Ref": "ValetDataTable"
        },
        "IMAGE_BUCKET_NAME": {
          "Ref": "LprImageBucket"
        },
        "COMPLETED_QUEUE_URL": {
          "Ref": "LprParseAndStoreCompletedQueue"
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ProcesslprdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/lpr-parse-and-store"
            }
          },
          "VerifylprdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/lpr-verify"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "lprparseandverify",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lpr-parse-and-store:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lpr-verify:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lpr-parse-and-store:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lpr-verify:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][3]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][4]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][5]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "LprProcessingQueue",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "LprParseAndStoreCompletedQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "lprparseandverify",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ProcesslprdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1320e877-4315",
                "S3Key": "serverless/lprparseandverify/dev/1754349561137-2025-08-04T23:19:21.137Z/lprparseandverify.zip"
              },
              "Handler": "parsehandlers.receivelprdata",
              "Runtime": "python3.12",
              "FunctionName": "lpr-parse-and-store",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "LPR_DYNAMODB_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"LPR_DYNAMODB_TABLE\"]"
                  },
                  "VALET_DYNAMODB_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"VALET_DYNAMODB_TABLE\"]"
                  },
                  "IMAGE_BUCKET_NAME": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"IMAGE_BUCKET_NAME\"]"
                  },
                  "COMPLETED_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"COMPLETED_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ProcesslprdataLogGroup"
            ]
          },
          "VerifylprdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1320e877-4315",
                "S3Key": "serverless/lprparseandverify/dev/1754349561137-2025-08-04T23:19:21.137Z/lprparseandverify.zip"
              },
              "Handler": "verifyhandlers.verifylprdata",
              "Runtime": "python3.12",
              "FunctionName": "lpr-verify",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "LPR_DYNAMODB_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"LPR_DYNAMODB_TABLE\"]"
                  },
                  "VALET_DYNAMODB_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"VALET_DYNAMODB_TABLE\"]"
                  },
                  "IMAGE_BUCKET_NAME": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"IMAGE_BUCKET_NAME\"]"
                  },
                  "COMPLETED_QUEUE_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"COMPLETED_QUEUE_URL\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "VerifylprdataLogGroup"
            ]
          },
          "ProcesslprdataLambdaVersion7XGnRBl2s8dbHZ8dRJvlmuArLZdzzobVRDOLAEe3Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProcesslprdataLambdaFunction"
              },
              "CodeSha256": "vsU+tysZL8lS4BJnT2liDL1D4d0R5e1D9UOTemWHVB4="
            }
          },
          "VerifylprdataLambdaVersiongfLhhdVIsUDQvW0I0EpMQ5I9TuGnaWYwC9mhkgpkM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "VerifylprdataLambdaFunction"
              },
              "CodeSha256": "vsU+tysZL8lS4BJnT2liDL1D4d0R5e1D9UOTemWHVB4="
            }
          },
          "ProcesslprdataEventSourceMappingSQSLprProcessingQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 1,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "LprProcessingQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProcesslprdataLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "VerifylprdataEventSourceMappingSQSLprParseAndStoreCompletedQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 1,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "LprParseAndStoreCompletedQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "VerifylprdataLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "LprProcessingQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "lpr-processing-queue"
            }
          },
          "S3ToSqsPolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "Properties": {
              "Queues": [
                {
                  "Ref": "LprProcessingQueue"
                }
              ],
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "s3.amazonaws.com"
                    },
                    "Action": "SQS:SendMessage",
                    "Resource": {
                      "Fn::GetAtt": [
                        "LprProcessingQueue",
                        "Arn"
                      ]
                    },
                    "Condition": {
                      "ArnLike": {
                        "aws:SourceArn": "arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6"
                      }
                    }
                  }
                ]
              }
            }
          },
          "LprDataTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "LprDataTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "plate_read_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "plate_read_timestamp",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "days_since_epoch",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "plate_read_id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "plate_read_timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "DaysSinceEpochIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "days_since_epoch",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "plate_read_timestamp",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TimeToLiveSpecification": {
                "AttributeName": "ttl",
                "Enabled": true
              }
            }
          },
          "ValetDataTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ValetRevenueTracking",
              "AttributeDefinitions": [
                {
                  "AttributeName": "plate_read_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "plate_read_timestamp",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "days_since_epoch",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "revenue_received",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "plate_read_id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "plate_read_timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "DaysSinceEpochIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "days_since_epoch",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "revenue_received",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "LprImageBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "IgnorePublicAcls": true,
                "BlockPublicPolicy": false,
                "RestrictPublicBuckets": false
              }
            }
          },
          "LprImageBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "LprImageBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Sid": "PublicReadGetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "LprImageBucket"
                          },
                          "/*"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          },
          "LprParseAndStoreCompletedQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "lpr-parse-and-store-completed"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-1320e877-4315",
            "Export": {
              "Name": "sls-lprparseandverify-dev-ServerlessDeploymentBucketName"
            }
          },
          "ProcesslprdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProcesslprdataLambdaVersion7XGnRBl2s8dbHZ8dRJvlmuArLZdzzobVRDOLAEe3Q"
            },
            "Export": {
              "Name": "sls-lprparseandverify-dev-ProcesslprdataLambdaFunctionQualifiedArn"
            }
          },
          "VerifylprdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "VerifylprdataLambdaVersiongfLhhdVIsUDQvW0I0EpMQ5I9TuGnaWYwC9mhkgpkM"
            },
            "Export": {
              "Name": "sls-lprparseandverify-dev-VerifylprdataLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "processlprdata": {
        "name": "lpr-parse-and-store",
        "handler": "parsehandlers.receivelprdata",
        "memorySize": 256,
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][8][\"Resource\"][0]"
              },
              "batchSize": 1
            }
          }
        ],
        "package": {},
        "memory": 256,
        "timeout": 6,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "ProcesslprdataLambdaVersion7XGnRBl2s8dbHZ8dRJvlmuArLZdzzobVRDOLAEe3Q"
      },
      "verifylprdata": {
        "name": "lpr-verify",
        "handler": "verifyhandlers.verifylprdata",
        "memorySize": 256,
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][8][\"Resource\"][1]"
              },
              "batchSize": 1
            }
          }
        ],
        "package": {},
        "memory": 256,
        "timeout": 6,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "VerifylprdataLambdaVersiongfLhhdVIsUDQvW0I0EpMQ5I9TuGnaWYwC9mhkgpkM"
      }
    },
    "resources": {
      "Resources": {
        "LprProcessingQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "lpr-processing-queue"
          }
        },
        "S3ToSqsPolicy": {
          "Type": "AWS::SQS::QueuePolicy",
          "Properties": {
            "Queues": [
              {
                "Ref": "LprProcessingQueue"
              }
            ],
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "s3.amazonaws.com"
                  },
                  "Action": "SQS:SendMessage",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LprProcessingQueue",
                      "Arn"
                    ]
                  },
                  "Condition": {
                    "ArnLike": {
                      "aws:SourceArn": "arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6"
                    }
                  }
                }
              ]
            }
          }
        },
        "LprDataTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "LprDataTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "plate_read_id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "plate_read_timestamp",
                "AttributeType": "N"
              },
              {
                "AttributeName": "days_since_epoch",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "plate_read_id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "plate_read_timestamp",
                "KeyType": "RANGE"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "DaysSinceEpochIndex",
                "KeySchema": [
                  {
                    "AttributeName": "days_since_epoch",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "plate_read_timestamp",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TimeToLiveSpecification": {
              "AttributeName": "ttl",
              "Enabled": true
            }
          }
        },
        "ValetDataTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ValetRevenueTracking",
            "AttributeDefinitions": [
              {
                "AttributeName": "plate_read_id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "plate_read_timestamp",
                "AttributeType": "N"
              },
              {
                "AttributeName": "days_since_epoch",
                "AttributeType": "N"
              },
              {
                "AttributeName": "revenue_received",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "plate_read_id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "plate_read_timestamp",
                "KeyType": "RANGE"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "DaysSinceEpochIndex",
                "KeySchema": [
                  {
                    "AttributeName": "days_since_epoch",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "revenue_received",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "LprImageBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "IgnorePublicAcls": true,
              "BlockPublicPolicy": false,
              "RestrictPublicBuckets": false
            }
          }
        },
        "LprImageBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "LprImageBucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "LprImageBucket"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        },
        "LprParseAndStoreCompletedQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "lpr-parse-and-store-completed"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "pauleverton",
      "app": "licenseplatevalidator",
      "service": "lprparseandverify",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "licenseplatevalidator",
    "appId": null,
    "org": "pauleverton",
    "orgId": null,
    "layers": {},
    "artifact": "/mnt/c/repositories/Research/licenseplatevalidator/LicensePlateParseAndVerify/.serverless/lprparseandverify.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/lprparseandverify/dev/1754349561137-2025-08-04T23:19:21.137Z",
    "artifact": "lprparseandverify.zip"
  }
}