{
  "/mnt/c/repositories/Research/licenseplatevalidator/LicensePlateParseAndStore/serverless.yml": {
    "versionFramework": "4.17.2",
    "servicePath": "/mnt/c/repositories/Research/licenseplatevalidator/LicensePlateParseAndStore/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "pauleverton",
      "app": "licenseplatevalidator",
      "service": "lprparseandstoreservice",
      "provider": {
        "name": "aws",
        "runtime": "python3.12",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject"
                ],
                "Resource": "arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6/*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "sqs:ReceiveMessage",
                  "sqs:DeleteMessage",
                  "sqs:GetQueueAttributes"
                ],
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "LprProcessingQueue",
                      "Arn"
                    ]
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:Query"
                ],
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "LprDataTable",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "LprDataTable",
                            "Arn"
                          ]
                        },
                        "index",
                        "DaysSinceEpochIndex"
                      ]
                    ]
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "sqs:SendMessage"
                ],
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "LprParseAndStoreCompletedQueue",
                      "Arn"
                    ]
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject"
                ],
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "LprImageBucket"
                        },
                        "/*"
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        },
        "environment": {
          "DYNAMODB_TABLE": {
            "Ref": "LprDataTable"
          },
          "IMAGE_BUCKET_NAME": {
            "Ref": "LprImageBucket"
          },
          "COMPLETED_QUEUE_URL": {
            "Ref": "LprParseAndStoreCompletedQueue"
          }
        },
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true
      },
      "functions": {
        "processlprdata": {
          "handler": "parsehandlers.receivelprdata",
          "memorySize": 256,
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "LprProcessingQueue",
                    "Arn"
                  ]
                },
                "batchSize": 1
              }
            }
          ],
          "name": "lprparseandstoreservice-dev-processlprdata"
        },
        "verifylprdata": {
          "handler": "verifyhandlers.verifylprdata",
          "memorySize": 256,
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "LprParseAndStoreCompletedQueue",
                    "Arn"
                  ]
                },
                "batchSize": 1
              }
            }
          ],
          "name": "lprparseandstoreservice-dev-verifylprdata"
        }
      },
      "resources": {
        "Resources": {
          "LprProcessingQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "lpr-processing-queue"
            }
          },
          "S3ToSqsPolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "Properties": {
              "Queues": [
                {
                  "Ref": "LprProcessingQueue"
                }
              ],
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "s3.amazonaws.com"
                    },
                    "Action": "SQS:SendMessage",
                    "Resource": {
                      "Fn::GetAtt": [
                        "LprProcessingQueue",
                        "Arn"
                      ]
                    },
                    "Condition": {
                      "ArnLike": {
                        "aws:SourceArn": "arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6"
                      }
                    }
                  }
                ]
              }
            }
          },
          "LprDataTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "LprDataTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "plate_read_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "plate_read_timestamp",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "days_since_epoch",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "ttl",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "plate_read_id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "plate_read_timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "DaysSinceEpochIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "days_since_epoch",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "plate_read_timestamp",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TimeToLiveSpecification": {
                "AttributeName": "ttl",
                "Enabled": true
              }
            }
          },
          "LprImageBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "IgnorePublicAcls": true,
                "BlockPublicPolicy": false,
                "RestrictPublicBuckets": false
              }
            }
          },
          "LprImageBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "LprImageBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Sid": "PublicReadGetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "LprImageBucket"
                          },
                          "/*"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          },
          "LprParseAndStoreCompletedQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "lpr-parse-and-store-completed"
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6/*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LprProcessingQueue",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:Query"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LprDataTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::GetAtt": [
                          "LprDataTable",
                          "Arn"
                        ]
                      },
                      "index",
                      "DaysSinceEpochIndex"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "sqs:SendMessage"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LprParseAndStoreCompletedQueue",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "LprImageBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      },
      "environment": {
        "DYNAMODB_TABLE": {
          "Ref": "LprDataTable"
        },
        "IMAGE_BUCKET_NAME": {
          "Ref": "LprImageBucket"
        },
        "COMPLETED_QUEUE_URL": {
          "Ref": "LprParseAndStoreCompletedQueue"
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "M22Zh9Qm6FNh4FDwlZ",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>",
        "$source": {
          "CREDENTIALS_CODE": "<REDACTED>"
        }
      },
      "instanceParameters": null
    },
    "error": {
      "message": "An error occurred: LprImageBucket - Resource handler returned message: \"The bucket you tried to delete is not empty (Service: S3, Status Code: 409, Request ID: D524YEX2F8J9R2YB, Extended Request ID: ylPkjQTaH8j/FTlHbgVvlaGu8UxP3aSupNRurLacrq4lj+2STLHMok06MQewXhclDaNiDYTurxKggCQarlsqs8YJJF8fBZus) (SDK Attempt Count: 1)\" (RequestToken: 5f450c7f-c4e6-3f4e-72e1-eef8bbc9e3a4, HandlerErrorCode: GeneralServiceException).",
      "stack": "ServerlessError2: An error occurred: LprImageBucket - Resource handler returned message: \"The bucket you tried to delete is not empty (Service: S3, Status Code: 409, Request ID: D524YEX2F8J9R2YB, Extended Request ID: ylPkjQTaH8j/FTlHbgVvlaGu8UxP3aSupNRurLacrq4lj+2STLHMok06MQewXhclDaNiDYTurxKggCQarlsqs8YJJF8fBZus) (SDK Attempt Count: 1)\" (RequestToken: 5f450c7f-c4e6-3f4e-72e1-eef8bbc9e3a4, HandlerErrorCode: GeneralServiceException).\n    at file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1153:828\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async remove:remove (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1174:27617)\n    at async PluginManager.runHooks (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1355:9865)\n    at async PluginManager.invoke (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1355:10634)\n    at async PluginManager.run (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1355:11364)\n    at async Serverless.run (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1362:10523)\n    at async runFramework (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1389:1777)\n    at async TraditionalRunner.run (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1385:28331)\n    at async route (file:///root/.serverless/releases/4.17.2/package/dist/sf-core.js:1560:2878)",
      "code": "AWS_CLOUD_FORMATION_DELETE_STACK_INTERNAL_S3_BUCKET_DELETE_FAILED"
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: pauleverton\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: licenseplatevalidator\nservice: lprparseandstoreservice\n\nprovider:\n  name: aws\n  runtime: python3.12\n  iam:\n    role:\n      statements:\n        - Effect: \"Allow\"\n          Action:\n            - \"s3:GetObject\"\n          Resource: \"arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6/*\"\n        - Effect: \"Allow\"\n          Action:\n            - \"sqs:ReceiveMessage\"\n            - \"sqs:DeleteMessage\"\n            - \"sqs:GetQueueAttributes\"\n          Resource:\n            - Fn::GetAtt: [ LprProcessingQueue, Arn ]\n        - Effect: \"Allow\"\n          Action:\n            - \"dynamodb:PutItem\"\n            - \"dynamodb:UpdateItem\"\n            - \"dynamodb:Query\"\n          Resource:\n            - Fn::GetAtt: [ LprDataTable, Arn ]\n            - !Join\n              - '/'\n              - - !GetAtt LprDataTable.Arn\n                - 'index'\n                - 'DaysSinceEpochIndex'\n        - Effect: \"Allow\"\n          Action:\n            - \"sqs:SendMessage\"\n          Resource:\n            - Fn::GetAtt: [ LprParseAndStoreCompletedQueue, Arn ]\n        - Effect: \"Allow\"\n          Action:\n            - \"s3:PutObject\"\n          Resource:\n            - Fn::Join:\n              - \"\"\n              - - \"arn:aws:s3:::\"\n                - !Ref LprImageBucket\n                - \"/*\"\n  environment:\n    DYNAMODB_TABLE: !Ref LprDataTable\n    IMAGE_BUCKET_NAME: !Ref LprImageBucket\n    COMPLETED_QUEUE_URL: !Ref LprParseAndStoreCompletedQueue\n\nfunctions:\n  processlprdata:\n    handler: parsehandlers.receivelprdata\n    memorySize: 256\n    events:\n      - sqs:\n          arn:\n            Fn::GetAtt:\n              - LprProcessingQueue\n              - Arn\n          batchSize: 1\n\n  verifylprdata:\n    handler: verifyhandlers.verifylprdata\n    memorySize: 256\n    events:\n      - sqs:\n          arn:\n            Fn::GetAtt:\n              - LprParseAndStoreCompletedQueue\n              - Arn\n          batchSize: 1\n\nresources:\n  Resources:\n    LprProcessingQueue:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: lpr-processing-queue\n    S3ToSqsPolicy:\n      Type: AWS::SQS::QueuePolicy\n      Properties:\n        Queues:\n          - Ref: LprProcessingQueue\n        PolicyDocument:\n          Statement:\n            - Effect: Allow\n              Principal:\n                Service: \"s3.amazonaws.com\"\n              Action: SQS:SendMessage\n              Resource:\n                Fn::GetAtt: [ LprProcessingQueue, Arn ]\n              Condition:\n                ArnLike:\n                  aws:SourceArn: \"arn:aws:s3:::lpringestionservice-dev-s3bucket-q9nhy6tnerz6\"\n    LprDataTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: LprDataTable\n        AttributeDefinitions:\n          - AttributeName: plate_read_id\n            AttributeType: S\n          - AttributeName: plate_read_timestamp\n            AttributeType: N\n          - AttributeName: days_since_epoch\n            AttributeType: N\n          - AttributeName: ttl\n            AttributeType: N\n        KeySchema:\n          - AttributeName: plate_read_id\n            KeyType: HASH\n          - AttributeName: plate_read_timestamp\n            KeyType: RANGE\n        GlobalSecondaryIndexes:\n          - IndexName: DaysSinceEpochIndex\n            KeySchema:\n              - AttributeName: days_since_epoch\n                KeyType: HASH\n              - AttributeName: plate_read_timestamp\n                KeyType: RANGE\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n        TimeToLiveSpecification:\n          AttributeName: ttl\n          Enabled: true\n    LprImageBucket:\n      Type: AWS::S3::Bucket\n      Properties:\n        PublicAccessBlockConfiguration:\n          BlockPublicAcls: true\n          IgnorePublicAcls: true\n          BlockPublicPolicy: false\n          RestrictPublicBuckets: false\n    LprImageBucketPolicy:\n      Type: AWS::S3::BucketPolicy\n      Properties:\n        Bucket: !Ref LprImageBucket\n        PolicyDocument:\n          Statement:\n            - Sid: PublicReadGetObject\n              Effect: Allow\n              Principal: \"*\"\n              Action: s3:GetObject\n              Resource: !Join\n                - \"\"\n                - - \"arn:aws:s3:::\"\n                  - !Ref LprImageBucket\n                  - \"/*\"\n    LprParseAndStoreCompletedQueue:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: lpr-parse-and-store-completed",
    "command": [
      "remove"
    ],
    "options": {},
    "orgId": "12513851-0f00-4616-8ca5-4e5a553cc67d",
    "orgName": "pauleverton",
    "userId": "PyTX8YthJhRRyv4jLM",
    "userName": "pauleverton",
    "serviceProviderAwsAccountId": "877174350179",
    "serviceProviderAwsCfStackName": "lprparseandstoreservice-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:877174350179:stack/lprparseandstoreservice-dev/f6f1a7c0-7150-11f0-9453-12d6f0db90af",
    "serviceProviderAwsCfStackCreated": "2025-08-04T16:35:00.397Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "VerifylprdataLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:877174350179:function:lprparseandstoreservice-dev-verifylprdata:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lprparseandstoreservice-dev-VerifylprdataLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ProcesslprdataLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:877174350179:function:lprparseandstoreservice-dev-processlprdata:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lprparseandstoreservice-dev-ProcesslprdataLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-1320e877-4315",
        "ExportName": "sls-lprparseandstoreservice-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}